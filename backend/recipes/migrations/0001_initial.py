# Generated by Django 3.2.3 on 2025-02-17 20:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FavouriteRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранные рецепты',
                'ordering': ('user',),
                'abstract': False,
                'default_related_name': 'favourite',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Это поле обязательно для заполнения.'}, help_text='Введите название ингредиента. Максимум 128 символов.', max_length=128, verbose_name='Название')),
                ('measurement_unit', models.CharField(error_messages={'blank': 'Это поле обязательно для заполнения.'}, help_text='Введите единицу величины ингредиента. Максимум 64 символов.', max_length=64, verbose_name='Единица величины')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(error_messages={'blank': 'Это поле обязательно для заполнения.'}, help_text='Добавьте изображение рецепта', upload_to='recipes/images/', verbose_name='Картинка')),
                ('name', models.CharField(error_messages={'blank': 'Это поле обязательно для заполнения.'}, help_text='Введите название рецепта. Максимум 256 символов.', max_length=256, verbose_name='Название')),
                ('text', models.TextField(error_messages={'blank': 'Это поле обязательно для заполнения.'}, help_text='Введите описание рецепта.', verbose_name='Описание')),
                ('cooking_time', models.PositiveSmallIntegerField(error_messages={'blank': 'Это поле обязательно для заполнения.'}, help_text='Введите время приготовления (в минутах).', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Время приготовления')),
                ('published_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время публикации')),
                ('short_link', models.CharField(blank=True, max_length=256, verbose_name='Короткий URL')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-published_date', 'name'),
                'default_related_name': 'recipes',
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Введите количество ингредиента.', validators=[django.core.validators.MinValueValidator(1, 'Минимальное количество: 1')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Связь рецепта и ингридиента',
                'verbose_name_plural': 'Связи рецептов и ингридиентов',
                'ordering': ('recipe',),
                'default_related_name': 'recipes_ingredients',
            },
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Связь рецепта и тега',
                'verbose_name_plural': 'Связи рецептов и тегов',
                'ordering': ('recipe',),
                'default_related_name': 'recipe_tags',
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Список покупок',
                'verbose_name_plural': 'Списки покупок',
                'ordering': ('user',),
                'abstract': False,
                'default_related_name': 'shopping_list',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'blank': 'Это поле обязательно для заполнения.', 'unique': 'Такой тег уже занят.'}, help_text='Введите название тега. Тег должен быть уникальным. Максимум 32 символов.', max_length=32, unique=True, verbose_name='Название тега')),
                ('slug', models.SlugField(error_messages={'blank': 'Это поле обязательно для заполнения.', 'unique': 'Такой slug уже занят.'}, help_text='Введите идентификатор страницы для URL. Идентификатор должен быть уникальным. Максимум 32 символов.', max_length=32, unique=True, validators=[django.core.validators.RegexValidator(message='Разрешены символы латиницы, цифры, дефис и подчёркивание.', regex='^[-a-zA-Z0-9_]+$')], verbose_name='Идентификатор slug')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('-id',),
            },
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('name', 'slug'), name='unique_tag'),
        ),
        migrations.AddField(
            model_name='shoppinglist',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to='recipes.recipe', verbose_name='Избранный рецепт'),
        ),
    ]
